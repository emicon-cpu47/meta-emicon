
_`SecurityManager`
==================

The SecurityManager controls all current available security features via security settings.

Security settings
-----------------

Within a set of security levels the level of the highest security is always at the first position. The levels are in descending order. The default level represents the most tolerant setting.

If the compile switch CMPSECURITYMANAGER_SET_SECURITY_LEVEL_MAXIMUM is defined, the SecurityManager advises all components to use the highest security level instead of the default one.

The following security levels are registered so far:

- CmpApp (Application download, OnlineChange, BootProject, see :ref:`group___cmp_app_itf___security_settings`):
    * Application code must be signed and encrypted [HIGHEST SECURITY LEVEL]
    * At least encrypted application code accepted (prevention to transmit application code in plain text)
    * At least signed application code accepted (prevention of loading application out of untrusted sources)
    * All types of application code accepted **(default)**
    * No support of signed and/or encrypted code
- CmpSecureChannel (Encrypted online communication, see :ref:`group___cmp_secure_channel_itf___security_settings`):
    * Only encrypted communication allowed [HIGHEST SECURITY LEVEL]
    * Encrypted and unencrypted communication supported. Can be decided by the online user **(default)**
    * Only unencrypted communication supported
- CmpWebserver (see :ref:`group___cmp_web_server_itf___security_settings`):
    * Only https connections supported [HIGHEST SECURITY LEVEL]
    * Redirection of http to https
    * http and https connections supported **(default)**
    * Only http connections supported

The defaults of the following level settings are only valid if the configuration setting "CmpSecurityManager/CreateAllOnStartup" is explicitly set to 1. This is independent of the compiler switch CMPSECURITYMANAGER_SET_SECURITY_LEVEL_MAXIMUM.

- CmpSecureChannel/selfsigned certificate:
    * Create a selfsigned cert **(default)**
    * Don't create a selfsigned cert
- CmpWebserver/selfsigned certificate:
    * Create a selfsigned cert **(default)**
    * Don't create a selfsigned cert
- CmpOpenSSL:
    * Create Diffie Hellman parameters on startup **(default)**
    * Create Diffie Hellman parameters only on request

Requirements
------------

The following runtime system components are necessary for this feature:

- CmpSecurityManager: :ref:`group___cmp_security_manager_itf`      

