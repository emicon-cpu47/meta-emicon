.. first line of composition.rst template

.. first line of group.rst template

.. _group___sys_cpu_multi_core_itf:

==================
SysCpuMultiCoreItf
==================

Interface of SysCpuMultiCore. :ref:`More... <group___sys_cpu_multi_core_itf-details>`

Data Structures
---------------

- struct :ref:`tagCoreGroupDefinition <structtag_core_group_definition>`

- struct :ref:`CpuCoreIdentifier <union_cpu_core_identifier>`

- struct :ref:`tagCpuCoreBindingDesc <structtag_cpu_core_binding_desc>`

- struct :ref:`tagsysmcbindprocess_struct <structtagsysmcbindprocess__struct>`

- struct :ref:`tagsysmcbindtask_struct <structtagsysmcbindtask__struct>`

- struct :ref:`tagsysmcdisablecore_struct <structtagsysmcdisablecore__struct>`

- struct :ref:`tagsysmcenablecore_struct <structtagsysmcenablecore__struct>`

- struct :ref:`tagsysmcgetload_struct <structtagsysmcgetload__struct>`

- struct :ref:`tagsysmcgetnumofcores_struct <structtagsysmcgetnumofcores__struct>`

- struct :ref:`tagsysmcgetprocessbinding_struct <structtagsysmcgetprocessbinding__struct>`

- struct :ref:`tagsysmcgettaskbinding_struct <structtagsysmcgettaskbinding__struct>`

- struct :ref:`tagsysmcunbindprocess_struct <structtagsysmcunbindprocess__struct>`

- struct :ref:`tagsysmcunbindtask_struct <structtagsysmcunbindtask__struct>`

- struct :ref:`ISysCpuMultiCore_C <struct_i_sys_cpu_multi_core___c>`

Macros
------

- #define :ref:`ECOREBINDINGKINDOF_COREBINDINGDESC_UNBOUND <group___sys_cpu_multi_core_itf_1gaa651a73f2e3ba0e1ed833f698300ce33>` 0

- #define :ref:`ECOREBINDINGKINDOF_COREBINDINGDESC_SINGLECORE <group___sys_cpu_multi_core_itf_1ga12ba63ff12bc844400bdd02c1f308ce2>` 1

- #define :ref:`ECOREBINDINGKINDOF_COREBINDINGDESC_COREGROUP <group___sys_cpu_multi_core_itf_1ga5bee0e16da1f6e307798b8dfe5c85691>` 2

- #define :ref:`ECOREBINDINGKINDOF <group___sys_cpu_multi_core_itf_1gaf51e94437b4607c3239f27271a554c1e>` RTS_IEC_INT

- #define :ref:`ITF_SysCpuMultiCore <group___sys_cpu_multi_core_itf_1gaff9baa213d2b63faa34678aaa4053336>`

- #define :ref:`EXTITF_SysCpuMultiCore <group___sys_cpu_multi_core_itf_1gab19e913d3e1ba1faf919f2e3a8f97864>`

Typedefs
--------

- typedef struct :ref:`tagCoreGroupDefinition <structtag_core_group_definition>` :ref:`CoreGroupDefinition <group___sys_cpu_multi_core_itf_1gaca76dc260783103e52c3cd044cbc5121>`

- typedef struct :ref:`tagCpuCoreBindingDesc <structtag_cpu_core_binding_desc>` :ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>`

- typedef struct :ref:`tagsysmcbindprocess_struct <structtagsysmcbindprocess__struct>` :ref:`sysmcbindprocess_struct <group___sys_cpu_multi_core_itf_1ga12a64d9369317fd7aebaa2793f9e293e>`

- typedef struct :ref:`tagsysmcbindtask_struct <structtagsysmcbindtask__struct>` :ref:`sysmcbindtask_struct <group___sys_cpu_multi_core_itf_1ga4ee72e5ace615c736b5f5fb83c08ff12>`

- typedef struct :ref:`tagsysmcdisablecore_struct <structtagsysmcdisablecore__struct>` :ref:`sysmcdisablecore_struct <group___sys_cpu_multi_core_itf_1ga6d07db83eed69ac071fe1176cc1dfa06>`

- typedef struct :ref:`tagsysmcenablecore_struct <structtagsysmcenablecore__struct>` :ref:`sysmcenablecore_struct <group___sys_cpu_multi_core_itf_1gacaeffd9cf0d5fb5b20ccb5fd61e97044>`

- typedef struct :ref:`tagsysmcgetload_struct <structtagsysmcgetload__struct>` :ref:`sysmcgetload_struct <group___sys_cpu_multi_core_itf_1ga8ffb5973137cf357da8ab98aed5fd458>`

- typedef struct :ref:`tagsysmcgetnumofcores_struct <structtagsysmcgetnumofcores__struct>` :ref:`sysmcgetnumofcores_struct <group___sys_cpu_multi_core_itf_1ga820422a5f5531dc7c128bf0584ba04d8>`

- typedef struct :ref:`tagsysmcgetprocessbinding_struct <structtagsysmcgetprocessbinding__struct>` :ref:`sysmcgetprocessbinding_struct <group___sys_cpu_multi_core_itf_1ga0b64fad5640e611ee4038bfddd8da1a8>`

- typedef struct :ref:`tagsysmcgettaskbinding_struct <structtagsysmcgettaskbinding__struct>` :ref:`sysmcgettaskbinding_struct <group___sys_cpu_multi_core_itf_1ga7a525de72f4e1ece481a4bdedaa45251>`

- typedef struct :ref:`tagsysmcunbindprocess_struct <structtagsysmcunbindprocess__struct>` :ref:`sysmcunbindprocess_struct <group___sys_cpu_multi_core_itf_1gabfc27fa5a2061732a44f58fd1d34a1c4>`

- typedef struct :ref:`tagsysmcunbindtask_struct <structtagsysmcunbindtask__struct>` :ref:`sysmcunbindtask_struct <group___sys_cpu_multi_core_itf_1ga019e1477eccc56fdb5446a82a0c5e675>`

- typedef :ref:`ISysCpuMultiCore_C <struct_i_sys_cpu_multi_core___c>` :ref:`ISysCpuMultiCore <group___sys_cpu_multi_core_itf_1gabca52eac9b2d0f93af38c09a39fbfa98>`

Functions
---------

- void :ref:`sysmcbindprocess <group___sys_cpu_multi_core_itf_1gaaa5233c6f9f82e77bd9fab0092811e22>` (:ref:`sysmcbindprocess_struct <group___sys_cpu_multi_core_itf_1ga12a64d9369317fd7aebaa2793f9e293e>` * p)

- void :ref:`sysmcbindtask <group___sys_cpu_multi_core_itf_1gab8d7601664537728868d14ae4587f623>` (:ref:`sysmcbindtask_struct <group___sys_cpu_multi_core_itf_1ga4ee72e5ace615c736b5f5fb83c08ff12>` * p)

- void :ref:`sysmcdisablecore <group___sys_cpu_multi_core_itf_1gacbd12db56c293ba755146fff862b8091>` (:ref:`sysmcdisablecore_struct <group___sys_cpu_multi_core_itf_1ga6d07db83eed69ac071fe1176cc1dfa06>` * p)

- void :ref:`sysmcenablecore <group___sys_cpu_multi_core_itf_1gaa90fdcb01d87af52e8ad810b66d488f6>` (:ref:`sysmcenablecore_struct <group___sys_cpu_multi_core_itf_1gacaeffd9cf0d5fb5b20ccb5fd61e97044>` * p)

- void :ref:`sysmcgetload <group___sys_cpu_multi_core_itf_1gab30bcd94c9ed65ee5205031654f6178c>` (:ref:`sysmcgetload_struct <group___sys_cpu_multi_core_itf_1ga8ffb5973137cf357da8ab98aed5fd458>` * p)

- void :ref:`sysmcgetnumofcores <group___sys_cpu_multi_core_itf_1gaa44a3fb76bc604fc96e32a8664bdba92>` (:ref:`sysmcgetnumofcores_struct <group___sys_cpu_multi_core_itf_1ga820422a5f5531dc7c128bf0584ba04d8>` * p)

- void :ref:`sysmcgetprocessbinding <group___sys_cpu_multi_core_itf_1gabc46aa562c75ff628b9f0a70db6afd61>` (:ref:`sysmcgetprocessbinding_struct <group___sys_cpu_multi_core_itf_1ga0b64fad5640e611ee4038bfddd8da1a8>` * p)

- void :ref:`sysmcgettaskbinding <group___sys_cpu_multi_core_itf_1ga913176bec64ab3bddaa69c60cfa1dbac>` (:ref:`sysmcgettaskbinding_struct <group___sys_cpu_multi_core_itf_1ga7a525de72f4e1ece481a4bdedaa45251>` * p)

- void :ref:`sysmcunbindprocess <group___sys_cpu_multi_core_itf_1gae065685699375dad3941090a4772055a>` (:ref:`sysmcunbindprocess_struct <group___sys_cpu_multi_core_itf_1gabfc27fa5a2061732a44f58fd1d34a1c4>` * p)

- void :ref:`sysmcunbindtask <group___sys_cpu_multi_core_itf_1gaa804d9e345a3785557e095385f9d459b>` (:ref:`sysmcunbindtask_struct <group___sys_cpu_multi_core_itf_1ga019e1477eccc56fdb5446a82a0c5e675>` * p)

- RTS_RESULT :ref:`SysCpuMultiCoreOSInit <group___sys_cpu_multi_core_itf_1ga6608c8cd3da78bbf5b65e2b63d4fc46e>` (INIT_STRUCT * pInit)

- RTS_RESULT :ref:`SysCpuMultiCoreOSHookFunction <group___sys_cpu_multi_core_itf_1ga61a0a2d508898c4f903779980b58e870>` (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)

- RTS_RESULT :ref:`SysMCBindProcess <group___sys_cpu_multi_core_itf_1ga65f40ea33d53d8b75f88db2a4a79f79b>` (:ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID, RTS_IEC_HANDLE hProcess)

- RTS_RESULT :ref:`SysMCBindProcess_ <group___sys_cpu_multi_core_itf_1gaa0e73587e4af990fa8b4e58602c739a8>` (:ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID, RTS_IEC_HANDLE hProcess)

- RTS_RESULT :ref:`SysMCBindTask <group___sys_cpu_multi_core_itf_1ga357e49c71245fad146c377dcff295ad7>` (:ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID, RTS_IEC_HANDLE hTask)

- RTS_RESULT :ref:`SysMCBindTask_ <group___sys_cpu_multi_core_itf_1ga296d5af815c749b5be6ea9c849f5d6b5>` (:ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID, RTS_IEC_HANDLE hTask)

- RTS_RESULT :ref:`SysMCUnbindProcess <group___sys_cpu_multi_core_itf_1gadb909c872b5a787ebf42c6d368cc90e0>` (RTS_IEC_HANDLE hProcess)

- RTS_RESULT :ref:`SysMCUnbindProcess_ <group___sys_cpu_multi_core_itf_1gaaabfb963dafcd85e1b1ef1b35c16a565>` (RTS_IEC_HANDLE hProcess)

- RTS_RESULT :ref:`SysMCUnbindTask <group___sys_cpu_multi_core_itf_1ga8c502c9779d3c49788cc47018b1407b4>` (RTS_IEC_HANDLE hTask)

- RTS_RESULT :ref:`SysMCUnbindTask_ <group___sys_cpu_multi_core_itf_1gaa30487d7d6674b2cfac6bff166e59975>` (RTS_IEC_HANDLE hTask)

- RTS_RESULT :ref:`SysMCGetLoad <group___sys_cpu_multi_core_itf_1ga2dc2ee507d9f2c8cb2dbd1d9a8d8ac0d>` (RTS_IEC_XWORD CoreID, RTS_IEC_BYTE * pPercent)

- RTS_RESULT :ref:`SysMCGetLoad_ <group___sys_cpu_multi_core_itf_1gad4b8b69ad9a453a76a5e913fe8c391b6>` (RTS_IEC_XWORD CoreID, RTS_IEC_BYTE * pPercent)

- RTS_UI32 :ref:`SysMCGetNumOfCores <group___sys_cpu_multi_core_itf_1gadf9130c00eee49dd86fb4dfd55ef0c8a>` (RTS_RESULT * pResult)

- RTS_UI32 :ref:`SysMCGetNumOfCores_ <group___sys_cpu_multi_core_itf_1ga157b4dcefc157c8ff096a52de5ef8701>` (RTS_RESULT * pResult)

- RTS_RESULT :ref:`SysMCEnableCore <group___sys_cpu_multi_core_itf_1ga895aff1715fb74b4269a2a4908b97bcd>` (RTS_IEC_XWORD CoreID)

- RTS_RESULT :ref:`SysMCDisableCore <group___sys_cpu_multi_core_itf_1ga118bd640220a4644867245fec2c05479>` (RTS_IEC_XWORD CoreID)

- RTS_RESULT :ref:`SysMCGetProcessBinding <group___sys_cpu_multi_core_itf_1ga5313c7aae4a8246f463e6fd993d6fd2c>` (RTS_IEC_HANDLE hProcess, :ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID)

- RTS_RESULT :ref:`SysMCGetProcessBinding_ <group___sys_cpu_multi_core_itf_1gaa90827c031722b461100d8783890d36c>` (RTS_IEC_HANDLE hProcess, :ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID)

- RTS_RESULT :ref:`SysMCGetTaskBinding <group___sys_cpu_multi_core_itf_1ga7aa77efa004c9ec23c483d13a590dd52>` (RTS_IEC_HANDLE hTask, :ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID)

- RTS_RESULT :ref:`SysMCGetTaskBinding_ <group___sys_cpu_multi_core_itf_1ga0085851910ea5e7faaa969de2a2a2e81>` (RTS_IEC_HANDLE hTask, :ref:`CpuCoreBindingDesc <group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc>` * pCoreID)

.. _group___sys_cpu_multi_core_itf-details:

Detailed Description
--------------------

Interface of SysCpuMultiCore.



Macro Definition Documentation
------------------------------
.. _group___sys_cpu_multi_core_itf_1gaa651a73f2e3ba0e1ed833f698300ce33:

#define ECOREBINDINGKINDOF_COREBINDINGDESC_UNBOUND 0
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION BEGIN

Enum: eCoreBindingKindOf

.. _group___sys_cpu_multi_core_itf_1ga12ba63ff12bc844400bdd02c1f308ce2:

#define ECOREBINDINGKINDOF_COREBINDINGDESC_SINGLECORE 1
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1ga5bee0e16da1f6e307798b8dfe5c85691:

#define ECOREBINDINGKINDOF_COREBINDINGDESC_COREGROUP 2
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gaf51e94437b4607c3239f27271a554c1e:

#define ECOREBINDINGKINDOF RTS_IEC_INT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gaff9baa213d2b63faa34678aaa4053336:

#define ITF_SysCpuMultiCore
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gab19e913d3e1ba1faf919f2e3a8f97864:

#define EXTITF_SysCpuMultiCore
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___sys_cpu_multi_core_itf_1gaca76dc260783103e52c3cd044cbc5121:

typedef struct tagCoreGroupDefinition  CoreGroupDefinition
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

CoreGroupDefinition

.. _group___sys_cpu_multi_core_itf_1ga990300d712bbd8dd872389e4a57380bc:

typedef struct tagCpuCoreBindingDesc  CpuCoreBindingDesc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

CpuCoreBindingDesc

.. _group___sys_cpu_multi_core_itf_1ga12a64d9369317fd7aebaa2793f9e293e:

typedef struct tagsysmcbindprocess_struct  sysmcbindprocess_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to bind a process to a core / core group.

.. _group___sys_cpu_multi_core_itf_1ga4ee72e5ace615c736b5f5fb83c08ff12:

typedef struct tagsysmcbindtask_struct  sysmcbindtask_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to bind a task to a core / core group.

.. _group___sys_cpu_multi_core_itf_1ga6d07db83eed69ac071fe1176cc1dfa06:

typedef struct tagsysmcdisablecore_struct  sysmcdisablecore_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to remove a dedicated core from the management of the runtime system. This core will not be used by the runtime and is therefore exclusively available for other applications.

.. _group___sys_cpu_multi_core_itf_1gacaeffd9cf0d5fb5b20ccb5fd61e97044:

typedef struct tagsysmcenablecore_struct  sysmcenablecore_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to add a formerlay removed dedicated core back to the management of the runtime system.

.. _group___sys_cpu_multi_core_itf_1ga8ffb5973137cf357da8ab98aed5fd458:

typedef struct tagsysmcgetload_struct  sysmcgetload_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

sysmcgetload

.. _group___sys_cpu_multi_core_itf_1ga820422a5f5531dc7c128bf0584ba04d8:

typedef struct tagsysmcgetnumofcores_struct  sysmcgetnumofcores_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns the number of available cores. Available means: Available to be used by runtime system.

.. _group___sys_cpu_multi_core_itf_1ga0b64fad5640e611ee4038bfddd8da1a8:

typedef struct tagsysmcgetprocessbinding_struct  sysmcgetprocessbinding_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Read the binding description of a process.

.. _group___sys_cpu_multi_core_itf_1ga7a525de72f4e1ece481a4bdedaa45251:

typedef struct tagsysmcgettaskbinding_struct  sysmcgettaskbinding_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Read the binding description of a task.

.. _group___sys_cpu_multi_core_itf_1gabfc27fa5a2061732a44f58fd1d34a1c4:

typedef struct tagsysmcunbindprocess_struct  sysmcunbindprocess_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to remove the core binding of a process.

.. _group___sys_cpu_multi_core_itf_1ga019e1477eccc56fdb5446a82a0c5e675:

typedef struct tagsysmcunbindtask_struct  sysmcunbindtask_struct
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

sysmcunbindtask

.. _group___sys_cpu_multi_core_itf_1gabca52eac9b2d0f93af38c09a39fbfa98:

typedef ISysCpuMultiCore_C ISysCpuMultiCore
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___sys_cpu_multi_core_itf_1gaaa5233c6f9f82e77bd9fab0092811e22:

void sysmcbindprocess (sysmcbindprocess_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gab8d7601664537728868d14ae4587f623:

void sysmcbindtask (sysmcbindtask_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gacbd12db56c293ba755146fff862b8091:

void sysmcdisablecore (sysmcdisablecore_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gaa90fdcb01d87af52e8ad810b66d488f6:

void sysmcenablecore (sysmcenablecore_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gab30bcd94c9ed65ee5205031654f6178c:

void sysmcgetload (sysmcgetload_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gaa44a3fb76bc604fc96e32a8664bdba92:

void sysmcgetnumofcores (sysmcgetnumofcores_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gabc46aa562c75ff628b9f0a70db6afd61:

void sysmcgetprocessbinding (sysmcgetprocessbinding_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1ga913176bec64ab3bddaa69c60cfa1dbac:

void sysmcgettaskbinding (sysmcgettaskbinding_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gae065685699375dad3941090a4772055a:

void sysmcunbindprocess (sysmcunbindprocess_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1gaa804d9e345a3785557e095385f9d459b:

void sysmcunbindtask (sysmcunbindtask_struct *p)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1ga6608c8cd3da78bbf5b65e2b63d4fc46e:

RTS_RESULT SysCpuMultiCoreOSInit (INIT_STRUCT *pInit)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

EXTERN LIB SECTION END

.. _group___sys_cpu_multi_core_itf_1ga61a0a2d508898c4f903779980b58e870:

RTS_RESULT SysCpuMultiCoreOSHookFunction (RTS_UI32 ulHook, RTS_UINTPTR ulParam1, RTS_UINTPTR ulParam2)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___sys_cpu_multi_core_itf_1ga65f40ea33d53d8b75f88db2a4a79f79b:

RTS_RESULT SysMCBindProcess (CpuCoreBindingDesc *pCoreID, RTS_IEC_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to bind a process to a CPU core or a group of CPU cores.

To bind a process to a single core, set the member "eCoreKindOfBinding" of the input structure CpuCoreBindingDesc to ECOREBINDINGKINDOF_COREBINDINGDESC_SINGLECORE. Set the union member nCoreID to the identifier of the core. This is a system dependent value.

To bind a process to a group of cores, set the member "eCoreKindOfBinding" of the input structure CpuCoreBindingDesc to ECOREBINDINGKINDOF_COREBINDINGDESC_COREGROUP. Set the union member CoreGroupID.dwNumCoresInGroup to the number of cores in the group. Set the union member of CoreGroupID.CoreIDs to the address of the first array elelment of an array of identifiers of cores.

**Parameters**

+---------+----------+--------------------------------------------------------------+
| [in]    | pCoreID  | Pointer to the binding description for the new core binding. |
+---------+----------+--------------------------------------------------------------+
| [in]    | hProcess | Handle of the process to bind.                               |
+---------+----------+--------------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+----------------------+-------------------------------------------------+
| ERR_OK               | Call was sucessfull.                            |
+----------------------+-------------------------------------------------+
| ERR_PARAMETER        | Parameter is invalid, e.g. core does not exist. |
+----------------------+-------------------------------------------------+
| ERR_OPERATION_DENIED | Operation is denied on OS level.                |
+----------------------+-------------------------------------------------+
| ERR_INVALID_HANDLE   | Handle is invalid.                              |
+----------------------+-------------------------------------------------+
| ERR_FAILED           | Function failed for any reason on OS level.     |
+----------------------+-------------------------------------------------+
| ERR_NOTIMPLEMENTED   | Function is not supported.                      |
+----------------------+-------------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1gaa0e73587e4af990fa8b4e58602c739a8:

RTS_RESULT SysMCBindProcess_ (CpuCoreBindingDesc *pCoreID, RTS_IEC_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCBindProcess

.. _group___sys_cpu_multi_core_itf_1ga357e49c71245fad146c377dcff295ad7:

RTS_RESULT SysMCBindTask (CpuCoreBindingDesc *pCoreID, RTS_IEC_HANDLE hTask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to bind a task to a CPU core or a group of CPU cores.

To bind a task to a single core, set the member "eCoreKindOfBinding" of the input structure CpuCoreBindingDesc to ECOREBINDINGKINDOF_COREBINDINGDESC_SINGLECORE. Set the union member nCoreID to the identifier of the core. This is a system dependent value.

To bind a task to a group of cores, set the member "eCoreKindOfBinding" of the input structure CpuCoreBindingDesc to ECOREBINDINGKINDOF_COREBINDINGDESC_COREGROUP. Set the union member CoreGroupID.dwNumCoresInGroup to the number of cores in the group. Set the union member of CoreGroupID.CoreIDs to the address of the first array elelment of an array of identifiers of cores.

**Parameters**

+---------+---------+--------------------------------------------------------------+
| [in]    | pCoreID | Pointer to the binding description for the new core binding. |
+---------+---------+--------------------------------------------------------------+
| [in]    | hTask   | Handle of the task to bind.                                  |
+---------+---------+--------------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+----------------------+-------------------------------------------------+
| ERR_OK               | Call was sucessfull.                            |
+----------------------+-------------------------------------------------+
| ERR_PARAMETER        | Parameter is invalid, e.g. core does not exist. |
+----------------------+-------------------------------------------------+
| ERR_OPERATION_DENIED | Operation is denied on OS level.                |
+----------------------+-------------------------------------------------+
| ERR_INVALID_HANDLE   | Handle is invalid.                              |
+----------------------+-------------------------------------------------+
| ERR_FAILED           | Function failed for any reason on OS level.     |
+----------------------+-------------------------------------------------+
| ERR_NOTIMPLEMENTED   | Function is not supported.                      |
+----------------------+-------------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1ga296d5af815c749b5be6ea9c849f5d6b5:

RTS_RESULT SysMCBindTask_ (CpuCoreBindingDesc *pCoreID, RTS_IEC_HANDLE hTask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCBindTask

.. _group___sys_cpu_multi_core_itf_1gadb909c872b5a787ebf42c6d368cc90e0:

RTS_RESULT SysMCUnbindProcess (RTS_IEC_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to remove the binding to a core or a group of cores of a process.

This means the OS is again responsible on which core the process is allowed to run on.

**Parameters**

+---------+----------+----------------------------------+
| [in]    | hProcess | Handle of the process to unbind. |
+---------+----------+----------------------------------+

**Returns:**

Returns the result.

**Return values**

+----------------------+---------------------------------------------+
| ERR_OK               | Call was sucessfull.                        |
+----------------------+---------------------------------------------+
| ERR_PARAMETER        | Parameter is invalid.                       |
+----------------------+---------------------------------------------+
| ERR_OPERATION_DENIED | Operation is denied on OS level.            |
+----------------------+---------------------------------------------+
| ERR_INVALID_HANDLE   | Handle is invalid.                          |
+----------------------+---------------------------------------------+
| ERR_FAILED           | Function failed for any reason on OS level. |
+----------------------+---------------------------------------------+
| ERR_NOTIMPLEMENTED   | Function is not supported.                  |
+----------------------+---------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1gaaabfb963dafcd85e1b1ef1b35c16a565:

RTS_RESULT SysMCUnbindProcess_ (RTS_IEC_HANDLE hProcess)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCUnbindProcess

.. _group___sys_cpu_multi_core_itf_1ga8c502c9779d3c49788cc47018b1407b4:

RTS_RESULT SysMCUnbindTask (RTS_IEC_HANDLE hTask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to remove the binding to a core or a group of cores of a task.

This means the OS is again responsible on which core the task is allowed to run on.

**Parameters**

+---------+-------+-------------------------------+
| [in]    | hTask | Handle of the task to unbind. |
+---------+-------+-------------------------------+

**Returns:**

Returns the result.

**Return values**

+----------------------+---------------------------------------------+
| ERR_OK               | Call was sucessfull.                        |
+----------------------+---------------------------------------------+
| ERR_PARAMETER        | Parameter is invalid.                       |
+----------------------+---------------------------------------------+
| ERR_OPERATION_DENIED | Operation is denied on OS level.            |
+----------------------+---------------------------------------------+
| ERR_INVALID_HANDLE   | Handle is invalid.                          |
+----------------------+---------------------------------------------+
| ERR_FAILED           | Function failed for any reason on OS level. |
+----------------------+---------------------------------------------+
| ERR_NOTIMPLEMENTED   | Function is not supported.                  |
+----------------------+---------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1gaa30487d7d6674b2cfac6bff166e59975:

RTS_RESULT SysMCUnbindTask_ (RTS_IEC_HANDLE hTask)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCUnbindTask

.. _group___sys_cpu_multi_core_itf_1ga2dc2ee507d9f2c8cb2dbd1d9a8d8ac0d:

RTS_RESULT SysMCGetLoad (RTS_IEC_XWORD CoreID, RTS_IEC_BYTE *pPercent)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get the current average workload of a dedicated core, identified by the input parameter.

**Parameters**

+---------+----------+----------------------------------------------------+
| [in]    | CoreID   | Identifies the core whose load has to be returned. |
+---------+----------+----------------------------------------------------+
| [out]   | pPercent | CPU-Core load in percent.                          |
+---------+----------+----------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+--------------------+-------------------------------------------------+
| ERR_OK             | Call was sucessfull.                            |
+--------------------+-------------------------------------------------+
| ERR_PARAMETER      | Parameter is invalid, e.g. core does not exist. |
+--------------------+-------------------------------------------------+
| ERR_NOTINITIALIZED | Function is not initialized.                    |
+--------------------+-------------------------------------------------+
| ERR_NOBUFFER       | Not enough memory for the performance counters  |
+--------------------+-------------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level.     |
+--------------------+-------------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                      |
+--------------------+-------------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1gad4b8b69ad9a453a76a5e913fe8c391b6:

RTS_RESULT SysMCGetLoad_ (RTS_IEC_XWORD CoreID, RTS_IEC_BYTE *pPercent)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCGetLoad

.. _group___sys_cpu_multi_core_itf_1gadf9130c00eee49dd86fb4dfd55ef0c8a:

RTS_UI32 SysMCGetNumOfCores (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to get the number of CPU cores available for use by the runtime system.

**Parameters**

+---------+--------+--------------------------------------------------------+
| [in]    | Result | Address of a variable to return an optional errorcode. |
+---------+--------+--------------------------------------------------------+

**Returns:**

Returns the number of cores.

**Return values**

+--------------------+---------------------------------------------+
| ERR_OK             | Call was sucessfull.                        |
+--------------------+---------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level. |
+--------------------+---------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                  |
+--------------------+---------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1ga157b4dcefc157c8ff096a52de5ef8701:

RTS_UI32 SysMCGetNumOfCores_ (RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCGetNumOfCores

.. _group___sys_cpu_multi_core_itf_1ga895aff1715fb74b4269a2a4908b97bcd:

RTS_RESULT SysMCEnableCore (RTS_IEC_XWORD CoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Administration function to enable a dedicated (formerly disabled) core identified by the input parameter CoreID to be used by the runtime system.

**Parameters**

+---------+--------+---------------------------------------------------------------------+
| [in]    | CoreID | Identifies the core to be removed from the list of available cores. |
+---------+--------+---------------------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+--------------------+-------------------------------------------------+
| ERR_OK             | Call was sucessfull.                            |
+--------------------+-------------------------------------------------+
| ERR_PARAMETER      | Parameter is invalid, e.g. core does not exist. |
+--------------------+-------------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level.     |
+--------------------+-------------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                      |
+--------------------+-------------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1ga118bd640220a4644867245fec2c05479:

RTS_RESULT SysMCDisableCore (RTS_IEC_XWORD CoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Administration function to disable a dedicated core identified by the input parameter CoreID not to be used by the runtime system.

**Parameters**

+---------+--------+---------------------------------------------------------------------+
| [in]    | CoreID | Identifies the core to be removed from the list of available cores. |
+---------+--------+---------------------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+--------------------+-------------------------------------------------+
| ERR_OK             | Call was sucessfull.                            |
+--------------------+-------------------------------------------------+
| ERR_PARAMETER      | Parameter is invalid, e.g. core does not exist. |
+--------------------+-------------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level.     |
+--------------------+-------------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                      |
+--------------------+-------------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1ga5313c7aae4a8246f463e6fd993d6fd2c:

RTS_RESULT SysMCGetProcessBinding (RTS_IEC_HANDLE hProcess, CpuCoreBindingDesc *pCoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to read the binding of a process to CPU core(s).

**Parameters**

+---------+----------+----------------------------------------------------------+
| [in]    | hProcess | Handle of the process.                                   |
+---------+----------+----------------------------------------------------------+
| [out]   | pCoreID  | Pointer to the binding description for the core binding. |
+---------+----------+----------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+--------------------+---------------------------------------------+
| ERR_OK             | Call was sucessfull.                        |
+--------------------+---------------------------------------------+
| ERR_PARAMETER      | Parameter is invalid.                       |
+--------------------+---------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level. |
+--------------------+---------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                  |
+--------------------+---------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1gaa90827c031722b461100d8783890d36c:

RTS_RESULT SysMCGetProcessBinding_ (RTS_IEC_HANDLE hProcess, CpuCoreBindingDesc *pCoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCGetProcessBinding

.. _group___sys_cpu_multi_core_itf_1ga7aa77efa004c9ec23c483d13a590dd52:

RTS_RESULT SysMCGetTaskBinding (RTS_IEC_HANDLE hTask, CpuCoreBindingDesc *pCoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function to read the binding of a task to CPU core(s).

**Parameters**

+---------+---------+----------------------------------------------------------+
| [in]    | hTask   | Handle of the task.                                      |
+---------+---------+----------------------------------------------------------+
| [out]   | pCoreID | Pointer to the binding description for the core binding. |
+---------+---------+----------------------------------------------------------+

**Returns:**

Returns the result.

**Return values**

+--------------------+---------------------------------------------+
| ERR_OK             | Call was sucessfull.                        |
+--------------------+---------------------------------------------+
| ERR_PARAMETER      | Parameter is invalid.                       |
+--------------------+---------------------------------------------+
| ERR_FAILED         | Function failed for any reason on OS level. |
+--------------------+---------------------------------------------+
| ERR_NOTIMPLEMENTED | Function is not supported.                  |
+--------------------+---------------------------------------------+

.. _group___sys_cpu_multi_core_itf_1ga0085851910ea5e7faaa969de2a2a2e81:

RTS_RESULT SysMCGetTaskBinding_ (RTS_IEC_HANDLE hTask, CpuCoreBindingDesc *pCoreID)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The OS implementation of SysMCGetTaskBinding

.. last line of group.rst template
.. last line of composition.rst template


