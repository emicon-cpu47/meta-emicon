.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_security_manager_itf:

=====================
CmpSecurityManagerItf
=====================

Interface of CmpSecurityManager. :ref:`More... <group___cmp_security_manager_itf-details>`

Modules
-------

- :ref:`Application flags <group___cmp_security_manager_itf___applicationflags>`

- :ref:`Compiler switch <group___cmp_security_manager_itf___compilerswitch>`

- :ref:`SecuritySettings <group___cmp_security_manager_itf___security_settings>`

- :ref:`Settings <group___cmp_security_manager_itf___settings>`

- :ref:`Static defines <group___cmp_security_manager_itf___staticdefines>`

Data Structures
---------------

- struct :ref:`_SecuritySetting <struct___security_setting>`

- struct :ref:`ICmpSecurityManager_C <struct_i_cmp_security_manager___c>`

Macros
------

- #define :ref:`ITF_CmpSecurityManager <group___cmp_security_manager_itf_1gabb8559ed66b1ca13dd086babf0f2f536>`

- #define :ref:`EXTITF_CmpSecurityManager <group___cmp_security_manager_itf_1gad28f8c197d677a8154c5311d6692743f>`

Typedefs
--------

- typedef struct :ref:`_SecuritySetting <struct___security_setting>` :ref:`SecuritySetting <group___cmp_security_manager_itf_1ga2f1b7f04346c3edc9ea7f6466034dde6>`

- typedef enum :ref:`RTS_SECURITYSETTINGS_SELFSIGNED_CERT <group___cmp_security_manager_itf_1ga5f4aec68439255f2197fa383fdfa3e29>` :ref:`RTS_SECURITYSETTINGS_SELFSIGNED_CERT <group___cmp_security_manager_itf_1ga90262c6c59120cd6d8a7a3bdcb92fd76>`

- typedef :ref:`ICmpSecurityManager_C <struct_i_cmp_security_manager___c>` :ref:`ICmpSecurityManager <group___cmp_security_manager_itf_1gaa1fb4c1920957a44b230de3a550debee>`

Enumerations
------------

- enum :ref:`RTS_SECURITYSETTINGS_SELFSIGNED_CERT <group___cmp_security_manager_itf_1ga5f4aec68439255f2197fa383fdfa3e29>` { :ref:`CREATE_SELFSIGNED_CERT <group___cmp_security_manager_itf_1gga5f4aec68439255f2197fa383fdfa3e29a136dd2ab28d9741b1170ed615ce4138a>`, :ref:`DONT_CREATE_SELFSIGNED_CERT <group___cmp_security_manager_itf_1gga5f4aec68439255f2197fa383fdfa3e29a5411f68893cf251d1ae23c913bbae220>` }

Functions
---------

- RTS_RESULT :ref:`SecManUnregisterSettings <group___cmp_security_manager_itf_1ga6ec3047643e0973b93434709a81774b2>` (RTS_HANDLE hSecuritySettings)

- RTS_HANDLE :ref:`SecManFindSettings <group___cmp_security_manager_itf_1ga47e032026786eccc6261fc4fb1734281>` (CMPID cmpId, RTS_UI32 ui32UsageID, RTS_RESULT * pResult)

- :ref:`SecuritySetting <group___cmp_security_manager_itf_1ga2f1b7f04346c3edc9ea7f6466034dde6>` * :ref:`SecManGetSetting <group___cmp_security_manager_itf_1gaf5af1774af165ab2c5a449532a76e4cb>` (RTS_HANDLE hSecuritySettings, RTS_RESULT * pResult)

- RTS_RESULT :ref:`SecManFillCertificateInfo <group___cmp_security_manager_itf_1ga9358c64f6efe1568056e2b031d01a091>` (CMPID cmpId, :ref:`RtsX509CertInfo <group___cmp_x509_cert_itf_1ga96114d4c034d1905d83ce6d9a53c9a16>` * pCertInfo)

- RTS_RESULT :ref:`SecManCheckTlsContext <group___cmp_security_manager_itf_1ga7c5a289e7d7c8a907da11f7480f5d72e>` (RTS_UI32 ui32TlsMethod, char * pszCipherList, RTS_I32 i32VerifyMode)

.. _group___cmp_security_manager_itf-details:

Detailed Description
--------------------

Interface of CmpSecurityManager.

The security manager interface is used to specify the level of all available security features in one central component. Additionally the X.509 certificates for servers in the runtime system can be specified here.

The actual available security features (for which the level can be specified) are: 1. Programming system communication: encrypted / unencrypted 2. IEC application code and bootproject: signed / unsigned, encrypted / unencrypted 3. WebServer: http / https

NOTE: This list will be extended in the future, if new security features are available and the corresponding security level must be specified!

SECURITY-NOTE: The security manager must be linked statically to the runtime system core to prevent, that it cannot be removed or replaced by a malware!

**Copyright:**

\(c) 2003-2016 3S-Smart Software Solutions

Macro Definition Documentation
------------------------------
.. _group___cmp_security_manager_itf_1gabb8559ed66b1ca13dd086babf0f2f536:

#define ITF_CmpSecurityManager
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_security_manager_itf_1gad28f8c197d677a8154c5311d6692743f:

#define EXTITF_CmpSecurityManager
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_security_manager_itf_1ga2f1b7f04346c3edc9ea7f6466034dde6:

typedef struct _SecuritySetting  SecuritySetting
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

SecuritySetting to safe .

.. _group___cmp_security_manager_itf_1ga90262c6c59120cd6d8a7a3bdcb92fd76:

typedef enum RTS_SECURITYSETTINGS_SELFSIGNED_CERT  RTS_SECURITYSETTINGS_SELFSIGNED_CERT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

SecurityID

.. _group___cmp_security_manager_itf_1gaa1fb4c1920957a44b230de3a550debee:

typedef ICmpSecurityManager_C ICmpSecurityManager
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Enumeration Type Documentation
------------------------------

.. _group___cmp_security_manager_itf_1ga5f4aec68439255f2197fa383fdfa3e29:

enum RTS_SECURITYSETTINGS_SELFSIGNED_CERT
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

SecurityID 

**Enumerator:**

+-----------------------------+
| CREATE_SELFSIGNED_CERT      |
+-----------------------------+
| DONT_CREATE_SELFSIGNED_CERT |
+-----------------------------+

Function Documentation
----------------------

.. _group___cmp_security_manager_itf_1ga6ec3047643e0973b93434709a81774b2:

RTS_RESULT SecManUnregisterSettings (RTS_HANDLE hSecuritySettings)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Don't create a selfsigned cert

Unregister security settings

**Parameters**

+---------+-------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSecuritySettings | Handle to the security settings returned by :ref:`SecManRegisterSettings() <group___cmp_open_s_s_l_dep___staticdefines_1gac15718151cb4dfc06137bb8ce8f0a15a>` or :ref:`SecManFindSettings() <group___cmp_security_manager_itf_1ga47e032026786eccc6261fc4fb1734281>` |
+---------+-------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Result of the operation

**Return values**

+---------------+---------------------------+
| ERR_OK        | Unregister succeeded      |
+---------------+---------------------------+
| ERR_PARAMETER | hSecuritySettings invalid |
+---------------+---------------------------+

.. _group___cmp_security_manager_itf_1ga47e032026786eccc6261fc4fb1734281:

RTS_HANDLE SecManFindSettings (CMPID cmpId, RTS_UI32 ui32UsageID, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_security_manager_itf_1gaf5af1774af165ab2c5a449532a76e4cb:

SecuritySetting* SecManGetSetting (RTS_HANDLE hSecuritySettings, RTS_RESULT *pResult)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the selected setting because of the security policy of the target!

**Parameters**

+---------+-------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | hSecuritySettings | Handle to the security settings returned by :ref:`SecManRegisterSettings() <group___cmp_open_s_s_l_dep___staticdefines_1gac15718151cb4dfc06137bb8ce8f0a15a>` or :ref:`SecManFindSettings() <group___cmp_security_manager_itf_1ga47e032026786eccc6261fc4fb1734281>` |
+---------+-------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [out]   | pResult           | Pointer to error code                                                                                                                                                                                                                                              |
+---------+-------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

**Return values**

+---------------+------------------------------+
| ERR_OK        | One setting is returned      |
+---------------+------------------------------+
| ERR_PARAMETER | hSecuritySettings is invalid |
+---------------+------------------------------+
| ERR_NO_OBJECT | No setting selected          |
+---------------+------------------------------+

**Returns:**

Pointer to the security setting which is selected on the target

.. _group___cmp_security_manager_itf_1ga9358c64f6efe1568056e2b031d01a091:

RTS_RESULT SecManFillCertificateInfo (CMPID cmpId, RtsX509CertInfo *pCertInfo)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_security_manager_itf_1ga7c5a289e7d7c8a907da11f7480f5d72e:

RTS_RESULT SecManCheckTlsContext (RTS_UI32 ui32TlsMethod, char *pszCipherList, RTS_I32 i32VerifyMode)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function checks a TLS context that is created via :ref:`TlsCreateContext() <group___cmp_tls_itf_1gacc000e3cd5fa34999896abf07160003c>` resp. :ref:`TlsCreateContext2() <group___cmp_tls_itf_1ga3b3f5ee888d46abc4757a7f0d9d6c560>` . Here the TlsMethod, CipherList and VerifyMethod can be checked against own security policy!

NOTE: This is only a callback function from the implementation of the CmpTlsItf! So don't us it directly!

**Parameters**

+---------+---------------+------------------------------------------------------------------------------------------------------------------------------+
| [in]    | ui32TlsMethod | Mode of the TLS connections. See: TLS_METHOD_... macros                                                                      |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------+
| [in]    | szCipherList  | Cipher selection of the TLS connection. See CipherList setting for details. If NULL the default of the setting will be used. |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------+
| [in]    | i32VerifyMode | Verify mode of the TLS connection. See: TLS_VERIFY... macros. Default server: NONE; Default client: VERIFY_PEER.             |
+---------+---------------+------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

Result of the operation

**Return values**

+------------+--------------------------------------------------------------------+
| ERR_OK     | All context settings are complying the security policy             |
+------------+--------------------------------------------------------------------+
| ERR_FAILED | At least one context setting is not complying the security policy! |
+------------+--------------------------------------------------------------------+

.. last line of group.rst template
.. last line of composition.rst template


