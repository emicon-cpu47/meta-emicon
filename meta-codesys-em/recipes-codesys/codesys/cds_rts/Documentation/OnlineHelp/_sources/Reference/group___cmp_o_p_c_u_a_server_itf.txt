.. first line of composition.rst template

.. first line of group.rst template

.. _group___cmp_o_p_c_u_a_server_itf:

=================
CmpOPCUAServerItf
=================

Interface of CmpOPCUAServer
**Copyright:**

\(c) 2003-2016 3S-Smart Software Solutions. :ref:`More... <group___cmp_o_p_c_u_a_server_itf-details>`

Modules
-------

- :ref:`Settings <group___cmp_o_p_c_u_a_server_itf___settings>`

Data Structures
---------------

- struct :ref:`_NumericRange <struct___numeric_range>`

- struct :ref:`ICmpOPCUAServer_C <struct_i_cmp_o_p_c_u_a_server___c>`

Macros
------

- #define :ref:`ITF_CmpOPCUAServer <group___cmp_o_p_c_u_a_server_itf_1gab6f843069ebf7f93626d55fc0cb98e8c>`

- #define :ref:`EXTITF_CmpOPCUAServer <group___cmp_o_p_c_u_a_server_itf_1gaaf4dc48c7edb5c3b0465bf159a437ea5>`

Typedefs
--------

- typedef struct :ref:`_NumericRange <struct___numeric_range>` :ref:`NumericRange <group___cmp_o_p_c_u_a_server_itf_1gac23f984fd0708176ec4c74208a50a934>`

- typedef :ref:`ICmpOPCUAServer_C <struct_i_cmp_o_p_c_u_a_server___c>` :ref:`ICmpOPCUAServer <group___cmp_o_p_c_u_a_server_itf_1ga0ea32d6ccb89865686129ee11a6b6d7f>`

Functions
---------

- RTS_RESULT :ref:`OpcUaServerRegisterProvider <group___cmp_o_p_c_u_a_server_itf_1ga0cb793c031bcea3bc9bb11cda784a4e7>` (:ref:`OpcUaProvider_Info <group___cmp_o_p_c_u_a_provider_itf__attributeservices_1gaffb1f020f6cd2951b7ca3d81abed4e75>` * providerInterface)

- RTS_RESULT :ref:`OpcUaServerUnRegisterProvider <group___cmp_o_p_c_u_a_server_itf_1gaf4c5e0a98384d6dccf9d897ddbdc8329>` (:ref:`OpcUaProvider_Info <group___cmp_o_p_c_u_a_provider_itf__attributeservices_1gaffb1f020f6cd2951b7ca3d81abed4e75>` * providerInterface)

- OpcUa_Boolean :ref:`OpcUaServerCheckReferenceRecursive <group___cmp_o_p_c_u_a_server_itf_1gafc6ae84c876865bf97dd57b2df6e3b22>` (const OpcUa_NodeId * pRequestedReference, OpcUa_Boolean bIncludeSubtypes, const OpcUa_NodeId * pReferenceToCheck)

- OpcUa_StatusCode :ref:`OpcUaServerCheckIfReferenceIsValid <group___cmp_o_p_c_u_a_server_itf_1ga3578151788386611686c858999b7cbbf>` (const OpcUa_NodeId * pRefTypeId)

- OpcUa_Int16 :ref:`OpcUaServerGetNamespaceIndex <group___cmp_o_p_c_u_a_server_itf_1ga79b878aa715b751d83a1c121e93c07a1>` (OpcUa_String * pNamespace)

- OpcUa_Int16 :ref:`OpcUaServerRegisterNamespace <group___cmp_o_p_c_u_a_server_itf_1ga59bd82a3f2e58427e82d3b7116053b83>` (OpcUa_String * pNamespace)

- OpcUa_StatusCode :ref:`OpcUaServerParseIndexRange <group___cmp_o_p_c_u_a_server_itf_1gaa1395d40ae1c961c9a3220530856b1e7>` (const OpcUa_String * pString, :ref:`NumericRange <group___cmp_o_p_c_u_a_server_itf_1gac23f984fd0708176ec4c74208a50a934>` * pRangeArray, OpcUa_UInt32 * pMaxRanges)

- OpcUa_Double :ref:`OpcUaServerGetMinimumSamplingRate <group___cmp_o_p_c_u_a_server_itf_1ga6682590cbc123062e581915b2816f657>` (void)

.. _group___cmp_o_p_c_u_a_server_itf-details:

Detailed Description
--------------------

Interface of CmpOPCUAServer
**Copyright:**

\(c) 2003-2016 3S-Smart Software Solutions.



Macro Definition Documentation
------------------------------
.. _group___cmp_o_p_c_u_a_server_itf_1gab6f843069ebf7f93626d55fc0cb98e8c:

#define ITF_CmpOPCUAServer
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_o_p_c_u_a_server_itf_1gaaf4dc48c7edb5c3b0465bf159a437ea5:

#define EXTITF_CmpOPCUAServer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typedef Documentation
---------------------

.. _group___cmp_o_p_c_u_a_server_itf_1gac23f984fd0708176ec4c74208a50a934:

typedef struct _NumericRange  NumericRange
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. _group___cmp_o_p_c_u_a_server_itf_1ga0ea32d6ccb89865686129ee11a6b6d7f:

typedef ICmpOPCUAServer_C ICmpOPCUAServer
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Function Documentation
----------------------

.. _group___cmp_o_p_c_u_a_server_itf_1ga0cb793c031bcea3bc9bb11cda784a4e7:

RTS_RESULT OpcUaServerRegisterProvider (OpcUaProvider_Info *providerInterface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Register a new data provider within the OPC UA server.

**Parameters**

+---------+-------------------+----------------------------------+
| [in]    | providerInterface | Table of the provider interface. |
+---------+-------------------+----------------------------------+

**Returns:**

Operation result:

.. _group___cmp_o_p_c_u_a_server_itf_1gaf4c5e0a98384d6dccf9d897ddbdc8329:

RTS_RESULT OpcUaServerUnRegisterProvider (OpcUaProvider_Info *providerInterface)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Unregister an already registered data provider within the OPC UA server.

**Parameters**

+---------+-------------------+----------------------------------+
| [in]    | providerInterface | Table of the provider interface. |
+---------+-------------------+----------------------------------+

**Returns:**

Operation result:

.. _group___cmp_o_p_c_u_a_server_itf_1gafc6ae84c876865bf97dd57b2df6e3b22:

OpcUa_Boolean OpcUaServerCheckReferenceRecursive (const OpcUa_NodeId *pRequestedReference, OpcUa_Boolean bIncludeSubtypes, const OpcUa_NodeId *pReferenceToCheck)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Check if to follow OPCU UA referencetype ID. Since referenctype IDs may are derived only the server who knows all IDs can check this.

**Parameters**

+---------+---------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pRequestedReference | The referencetype ID the client requested.                                                                                            |
+---------+---------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | bIncludeSubtypes    | The flag if subtypes should be followed too. Set by the client.                                                                       |
+---------+---------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| [in]    | pReferenceToCheck   | The referencetype ID the compare against. Usually the referencetype ID of the current node (e.g. while browsing) in the adress space. |
+---------+---------------------+---------------------------------------------------------------------------------------------------------------------------------------+

**Returns:**

The function returns OpcUa_True if following the referencetype ID is allowd. OpcUa_False is returned otherwhise.

.. _group___cmp_o_p_c_u_a_server_itf_1ga3578151788386611686c858999b7cbbf:

OpcUa_StatusCode OpcUaServerCheckIfReferenceIsValid (const OpcUa_NodeId *pRefTypeId)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This funtion checks if a referencetype ID is valid.

**Parameters**

+---------+------------+---------------------------+
| [in]    | pRefTypeId | Referecetype ID to check. |
+---------+------------+---------------------------+

**Returns:**

Returns either OpcUa_Good or OpcUa_BadRefereceTypeIdInvalid.

.. _group___cmp_o_p_c_u_a_server_itf_1ga79b878aa715b751d83a1c121e93c07a1:

OpcUa_Int16 OpcUaServerGetNamespaceIndex (OpcUa_String *pNamespace)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Get the namespace index of the given namespace. Do not relay on constant referencetype IDs. They may depend on the registration order of different providers.

**Parameters**

+---------+------------+---------------------------+
| [in]    | pNamespace | The namespace of intrest. |
+---------+------------+---------------------------+

**Returns:**

-1: If the namespace is not registerd yet. index: The index of the namespace. This does not change while the server is running.

.. _group___cmp_o_p_c_u_a_server_itf_1ga59bd82a3f2e58427e82d3b7116053b83:

OpcUa_Int16 OpcUaServerRegisterNamespace (OpcUa_String *pNamespace)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Register a new namespace to the server. If the namespace is registerd already this index is retruned.

**Parameters**

+---------+------------+--------------------------------------+
| [in]    | pNamespace | Namespace to register at the server. |
+---------+------------+--------------------------------------+

**Returns:**

Returns the index of the registerd namespace.

.. _group___cmp_o_p_c_u_a_server_itf_1gaa1395d40ae1c961c9a3220530856b1e7:

OpcUa_StatusCode OpcUaServerParseIndexRange (const OpcUa_String *pString, NumericRange *pRangeArray, OpcUa_UInt32 *pMaxRanges)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Parse the index range string which is part of some OPC UA requests with arrays to a strcutred form.

**Parameters**

+---------+-------------+---------------------------------------------------------------+
| [in]    | pString     | String to parse.                                              |
+---------+-------------+---------------------------------------------------------------+
| [inout] | pRangeArray | Pointer to the arrays where to store the parsed index ranges. |
+---------+-------------+---------------------------------------------------------------+
| [in]    | pMaxRanges  | Maximum length of the array.                                  |
+---------+-------------+---------------------------------------------------------------+

**Returns:**

Returns the index of the registerd namespace.

.. _group___cmp_o_p_c_u_a_server_itf_1ga6682590cbc123062e581915b2816f657:

OpcUa_Double OpcUaServerGetMinimumSamplingRate (void)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This function returns the mininum sampling rate supported by the server.

.. last line of group.rst template
.. last line of composition.rst template


